name: SonarQube
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main

  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

  pull_request_target:
    types: [ labeled, opened, synchronize, reopened ]
    branches: [ main ]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    if: |
      github.event_name == 'pull_request_target' &&
      github.event.pull_request.head.repo.fork == true &&
      contains(github.event.pull_request.labels.*.name, 'safe-to-scan')

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request && github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 1
          persist-credentials: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=skodjob_test-frame -Dsonar.coverage.exclusions="**/*"
          else
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=skodjob_test-frame
          fi
